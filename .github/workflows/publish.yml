name: Publish
on:
  release:
    types: [published]
env:
  CARGO_INCREMENTAL: 0
  CI: 1
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10
jobs:
  build:
    name: Build (${{ matrix.archive  }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false
            archive: texlab-x86_64-windows.zip

          - os: windows-latest
            target: i686-pc-windows-msvc
            use-cross: false
            archive: texlab-i686-windows.zip

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            use-cross: false
            archive: texlab-aarch64-windows.zip

          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
            archive: texlab-x86_64-macos.tar.gz

          - os: macos-latest
            target: aarch64-apple-darwin
            use-cross: false
            archive: texlab-aarch64-macos.tar.gz

          - os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
            use-cross: false
            archive: texlab-x86_64-linux.tar.gz

          - os: ubuntu-18.04
            target: aarch64-unknown-linux-gnu
            use-cross: true
            archive: texlab-aarch64-linux.tar.gz

          - os: ubuntu-18.04
            target: armv7-unknown-linux-gnueabihf
            use-cross: true
            archive: texlab-armv7hf-linux.tar.gz

          - os: ubuntu-18.04
            target: x86_64-unknown-linux-musl
            use-cross: false
            archive: texlab-x86_64-alpine.tar.gz
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }} --all-features --release --locked
          use-cross: ${{ matrix.use-cross }}
      - name: Compress (Windows)
        if: ${{ contains(matrix.os, 'windows') }}
        run: ${{ format('Compress-Archive target/{0}/release/texlab.exe {1}', matrix.target, matrix.archive) }}
      - name: Compress (macOS)
        if: ${{ contains(matrix.os, 'macos') }}
        run: ${{ format('gtar -czvf {1} -C target/{0}/release texlab', matrix.target, matrix.archive) }}
      - name: Compress (Linux)
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: ${{ format('tar -czvf {1} -C target/{0}/release texlab', matrix.target, matrix.archive) }}
      - name: Upload binary archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.archive }}
  github:
    name: GitHub
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Publish binaries
        run: |
          gh release upload ${{ github.ref_name }} $(find . -iname texlab*.zip) 
          gh release upload ${{ github.ref_name }} $(find . -iname texlab*.tar.gz)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  crates-io:
    name: crates.io
    needs: [github]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  ctan:
    name: CTAN
    needs: [github, crates-io]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
      - name: Install Tectonic workaround
        run: |
          sudo add-apt-repository universe
          sudo apt install libfuse2
      - name: Install Tectonic
        uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate PDF documentation
        run: tectonic texlab.tex
      - name: Generate man page
        run: |
          sudo apt install -y help2man
          cargo build
          help2man --output=texlab.1 --no-info "target/debug/texlab"
      - name: Export to ZIP archive
        run: |
          git add texlab.1 texlab.pdf
          git commit -m "Update CTAN documentation" --author="Patrick Förster <pfoerster@users.noreply.github.com>"
          git archive --prefix=texlab/ -o texlab.zip HEAD
      - id: get-version
        run: |
          RELEASE_TAG=${{ github.event.release.tag_name }}
          echo "::set-output name=version::${RELEASE_TAG:1}"
      - uses: paolobrasolin/ctan-submit-action@v1
        with:
          action: upload
          file_path: texlab.zip
          fields: |
            pkg: texlab
            version: ${{ steps.get-version.outputs.version }}
            uploader: Eric Förster
            email: eric.foerster@outlook.com
            update: 'true'
